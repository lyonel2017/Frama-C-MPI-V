module MPI_the_protocol

use protocol.MPI_Protocol
use int.Int
use int.EuclideanDivision
use size.MPI_size


let constant the_protocol : protocol = 
  (Seq (Broadcast 0 1 MPI_int) 
  (Seq (Scatter 0 (div 1000000 size) MPI_float)
  (* case right: 0 -> 1 *)
  (Seq (Message 0 1 1 0 MPI_float)
  (* case right: [1 .. procs-2] -> [2 .. procs-1] *)
  (Seq (Foreach 1 (size - 2) 
       (fun i -> Message i (i+1) 1 0 MPI_float))
  (* case right: procs-1 -> 0 *)
  (Seq (Message (size-1) 0 1 0 MPI_float)
  (Seq (Reduce 0 1 MPI_float MPI_max)
       (Gather 0 (div 1000000 size) MPI_float)))))))
end
