module MPI_the_protocol

use protocol.MPI_Protocol
use int.Int
use int.EuclideanDivision

val constant protocol_4 : protocol
val constant protocol_3 : protocol
val constant protocol_2 : protocol
val constant protocol_1 : protocol
val constant protocol_while_0 : protocol

axiom p_5 : protocol_while_0 = Allgather (div 10000 size) MPI_float
axiom p_4 : protocol_4 = (Gather 0 (div 10000 size) MPI_float)
axiom p_3 : protocol_3 = (Seq (While 1000000 protocol_while_0) protocol_4)
axiom p_2 : protocol_2 = (Seq (Allgather (div 10000 size) MPI_float) protocol_3)
axiom p_1 : protocol_1 = (Seq (Scatter 0 (div 10000 size) MPI_float) protocol_2)
let constant the_protocol : protocol = (Seq (Scatter 0 ((div 10000 size) * 10000) MPI_float) protocol_1)

end

